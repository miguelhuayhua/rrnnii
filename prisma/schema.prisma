generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  usuario   String     @unique
  password  String
  createdAt DateTime   @default(now())
  id        String     @id @default(dbgenerated("generate_object_id()"))
  estado    Boolean    @default(true)
  avatar    String?
  rol       String     @default("tecnico")
  Persona   Persona    @relation(fields: [personaCi], references: [ci])
  personaCi String     @unique
  Acciones  Acciones[]
}

model Convenio {
  id              String            @id @default(dbgenerated("generate_object_id()"))
  titulo          String            @default("")
  finalizacion    String?           @default("")
  createdAt       DateTime          @default(now())
  estado          Boolean           @default(true)
  tipo            String            @default("nacional")
  descripcion     String            @default("")
  pdf             String            @default("")
  imagen          String            @default("")
  institucionId   String            @default("")
  Institucion     Institucion?      @relation(fields: [institucionId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  ConvenioCarrera ConvenioCarrera[]
}

model Pasantia {
  id              String            @id @default(dbgenerated("generate_object_id()"))
  titulo          String            @default("")
  finalizacion    String?           @default("")
  createdAt       DateTime          @default(now())
  modalidad       String            @default("")
  descripcion     String            @default("")
  pdf             String            @default("")
  estado          Boolean           @default(true)
  imagen          String            @default("")
  institucionId   String            @default("")
  Institucion     Institucion?      @relation(fields: [institucionId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  PasantiaCarrera PasantiaCarrera[]
}

model Actividad {
  id            String         @id @default(dbgenerated("generate_object_id()"))
  titulo        String         @default("")
  createdAt     DateTime       @default(now())
  descripcion   String         @default("")
  pdf           String         @default("")
  tipo          String         @default("")
  referencia    String?        @default("")
  estado        Boolean        @default(true)
  imagen        String         @default("")
  encargado     String         @default("")
  Participantes Participante[]
}

model Evento {
  id          String   @id @default(dbgenerated("generate_object_id()"))
  titulo      String   @default("")
  createdAt   DateTime @default(now())
  inicio      String   @default("")
  descripcion String   @default("")
  pdf         String   @default("")
  tipo        String   @default("")
  link        String?  @default("")
  estado      Boolean  @default(true)
  imagen      String   @default("")
}

model Galeria {
  id          String   @id @default(dbgenerated("generate_object_id()"))
  titulo      String   @default("")
  createdAt   DateTime @default(now())
  descripcion String   @default("")
  estado      Boolean  @default(true)
  imagen      String   @default("")
}

model Institucion {
  id        String     @id @default(dbgenerated("generate_object_id()"))
  nombre    String     @unique
  createdAt DateTime   @default(now())
  estado    Boolean    @default(true)
  logo      String     @default("")
  contacto  Int?       @default(0)
  Convenios Convenio[]
  Pasantia  Pasantia[]
}

model ConvenioCarrera {
  id         String    @id @default(dbgenerated("generate_object_id()"))
  convenioId String    @default("")
  Convenio   Convenio? @relation(fields: [convenioId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  carreraId  String    @default("")
  Carrera    Carrera?  @relation(fields: [carreraId], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model PasantiaCarrera {
  id         String    @id @default(dbgenerated("generate_object_id()"))
  pasantiaId String
  Pasantia   Pasantia? @relation(fields: [pasantiaId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  carreraId  String
  Carrera    Carrera?  @relation(fields: [carreraId], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model Carrera {
  id              String            @id @default(dbgenerated("generate_object_id()"))
  nombre          String            @default("")
  createdAt       DateTime          @default(now())
  logo            String            @default("")
  ConvenioCarrera ConvenioCarrera[]
  contacto        Int?              @default(0)
  estado          Boolean           @default(true)
  PasantiaCarrera PasantiaCarrera[]
}

model Unidad {
  contacto  String @unique @default("")
  email     String @default("")
  ubicacion String @default("")
}

model Participante {
  id              String     @id @default(dbgenerated("generate_object_id()"))
  nombre_completo String     @default("")
  contacto        String     @default("")
  id_actividad    String     @default("")
  Actividad       Actividad? @relation(fields: [actividadId], references: [id])
  actividadId     String?
}

model Persona {
  nombre       String   @default("")
  paterno      String   @default("")
  materno      String   @default("")
  f_nacimiento String   @default("")
  ci           String   @unique @default("")
  Usuario      Usuario?
}

model Acciones {
  id        String   @id @default(dbgenerated("generate_object_id()"))
  usuarioId String   @default("")
  Usuario   Usuario? @relation(fields: [usuarioId], references: [id])
  tabla     String   @default("")
  tipo      String   @default("")
  createdAt DateTime @default(now())
}
