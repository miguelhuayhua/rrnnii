generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  usuario   String   @unique
  password  String
  createdAt DateTime @default(now())
  id        String   @id @default(dbgenerated("generate_object_id()"))
  estado    Boolean  @default(true)
  avatar    String?
  rol       String   @default("tecnico")
}

model Convenio {
  id              String            @id @default(dbgenerated("generate_object_id()"))
  titulo          String
  finalizacion    String?
  createdAt       DateTime          @default(now())
  estado          Boolean           @default(true)
  tipo            String            @default("nacional")
  descripcion     String
  pdf             String
  imagen          String
  institucionId   String
  Institucion     Institucion?      @relation(fields: [institucionId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  ConvenioCarrera ConvenioCarrera[]
}

model Pasantia {
  id              String            @id @default(dbgenerated("generate_object_id()"))
  titulo          String
  finalizacion    String?
  createdAt       DateTime          @default(now())
  modalidad       String
  descripcion     String
  pdf             String
  estado          Boolean           @default(true)
  imagen          String
  institucionId   String
  Institucion     Institucion?      @relation(fields: [institucionId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  PasantiaCarrera PasantiaCarrera[]
}

model Actividad {
  id          String   @id @default(dbgenerated("generate_object_id()"))
  titulo      String
  createdAt   DateTime @default(now())
  descripcion String
  pdf         String
  tipo        String
  referencia  String?
  estado      Boolean  @default(true)
  imagen      String
}

model Evento {
  id          String   @id @default(dbgenerated("generate_object_id()"))
  titulo      String
  createdAt   DateTime @default(now())
  inicio      String   @default("")
  descripcion String
  pdf         String
  tipo        String
  link        String?
  estado      Boolean  @default(true)
  imagen      String
}

model Galeria {
  id          String   @id @default(dbgenerated("generate_object_id()"))
  titulo      String
  createdAt   DateTime @default(now())
  descripcion String
  estado      Boolean  @default(true)
  imagen      String
}

model Institucion {
  id        String     @id @default(dbgenerated("generate_object_id()"))
  nombre    String     @unique
  createdAt DateTime   @default(now())
  estado    Boolean    @default(true)
  logo      String     @default("")
  contacto  Int?       @default(0)
  Convenios Convenio[]
  Pasantia  Pasantia[]
}

model ConvenioCarrera {
  id         String    @id @default(dbgenerated("generate_object_id()"))
  convenioId String
  Convenio   Convenio? @relation(fields: [convenioId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  carreraId  String
  Carrera    Carrera?  @relation(fields: [carreraId], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model PasantiaCarrera {
  id         String    @id @default(dbgenerated("generate_object_id()"))
  pasantiaId String
  Pasantia   Pasantia? @relation(fields: [pasantiaId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  carreraId  String
  Carrera    Carrera?  @relation(fields: [carreraId], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model Carrera {
  id              String            @id @default(dbgenerated("generate_object_id()"))
  nombre          String            @default("")
  createdAt       DateTime          @default(now())
  logo            String            @default("")
  ConvenioCarrera ConvenioCarrera[]
  contacto        Int?              @default(0)
  estado          Boolean           @default(true)
  PasantiaCarrera PasantiaCarrera[]
}

model Unidad {
  contacto String @default("") @unique
  email String @default("")
  ubicacion String @default("")
}